{
  "name": "argo-cd",
  "version": "1.0.0",
  "label": "Argo CD",
  "description": "Argo CD (short for Argo Continuous Delivery) is a declarative, GitOps continuous delivery tool for Kubernetes. It allows you to manage and deploy applications to Kubernetes clusters using Git repositories as the source of truth for both the desired application state and its configuration.",
  "publisher": "Fortinet",
  "cs_approved": true,
  "cs_compatible": true,
  "contributor": "",
  "help_online": "https://docs.fortinet.com/document/fortisoar/1.0.0/argo-cd/1005/argo-cd-v1-0-0",
  "icon_small_name": "small.png",
  "icon_large_name": "large.png",
  "category": "DevOps and Digital Operations",
  "configuration": {
    "fields": [
      {
        "title": "Server URL",
        "description": "Specify the URL of the Argo CD server to connect and perform automated operations.",
        "type": "text",
        "name": "server_url",
        "required": true,
        "editable": true,
        "visible": true,
        "tooltip": "Specify the URL of the Argo CD server to connect and perform automated operations."
      },
      {
        "title": "API Token",
        "description": "Specify the API Token to access the endpoint to connect and perform the automated operations",
        "required": true,
        "editable": true,
        "visible": true,
        "type": "password",
        "name": "api_token",
        "tooltip": "Specify the API Token to access the endpoint to connect and perform the automated operations"
      },
      {
        "title": "Verify SSL",
        "description": "Specifies whether the SSL certificate for the server is to be verified. By default, this option is selected, i.e., set to true.",
        "name": "verify_ssl",
        "type": "checkbox",
        "required": false,
        "editable": true,
        "visible": true,
        "value": true,
        "tooltip": "Specifies whether the SSL certificate for the server is to be verified. By default, this option is selected, i.e., set to true."
      }
    ]
  },
  "operations": [
    {
      "operation": "create_application",
      "title": "Create Application",
      "description": "Creates an application in Argo CD based on the application name, source, destination, and other input parameters that you have specified.",
      "category": "investigation",
      "annotation": "create_application",
      "enabled": true,
      "parameters": [
        {
          "title": "Application Name",
          "description": "Specify the name of the application to create application in Argo CD.",
          "required": true,
          "editable": true,
          "visible": true,
          "type": "text",
          "name": "name",
          "tooltip": "Specify the name of the application to create application in Argo CD. Note: Name, must match regex ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$ and the length must not be longer than 53"
        },
        {
          "title": "Source",
          "description": "Specify the source, in the JSON format, based on which to create application in Argo CD.",
          "required": true,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "source",
          "tooltip": "Specify the source, in the JSON format, based on which to create application in Argo CD.",
          "value": {
            "repoURL": "",
            "path": "",
            "helm": {
              "valueFiles": []
            }
          }
        },
        {
          "title": "Destination",
          "description": "Specify the destination, in the JSON format, based on which to create application in Argo CD.",
          "required": true,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "destination",
          "tooltip": "Specify the destination, in the JSON format, based on which to create application in Argo CD.",
          "value": {
            "server": "",
            "namespace": ""
          }
        },
        {
          "title": "Metadata",
          "description": "(Optional) Specify the metadata, in the JSON format, based on which to create application in Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "metadata",
          "tooltip": "(Optional) Specify the metadata, in the JSON format, based on which to create application in Argo CD.",
          "value": {
            "namespace": "",
            "labels": {}
          }
        },
        {
          "title": "Specifications",
          "description": "(Optional) Specify the specifications, in the JSON format, based on which to create application in Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "spec",
          "tooltip": "(Optional) Specify the specifications, in the JSON format, based on which to create application in Argo CD.",
          "value": {
            "project": ""
          }
        },
        {
          "title": "Operation",
          "description": "(Optional) Specify the operation, in the JSON format, based on which to create application in Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "operation",
          "tooltip": "(Optional) Specify the operation, in the JSON format, based on which to create application in Argo CD.",
          "value": {
            "info": {}
          }
        },
        {
          "title": "Additional Properties",
          "description": "(Optional) Additional fields, in the JSON format, based on which to create application in Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "additional_properties",
          "tooltip": "(Optional) Additional fields, in the JSON format, based on which to create application in Argo CD."
        }
      ],
      "output_schema": {
        "metadata": {
          "name": "",
          "namespace": "",
          "uid": "",
          "resourceVersion": "",
          "generation": "",
          "creationTimestamp": "",
          "managedFields": [
            {
              "manager": "",
              "operation": "",
              "apiVersion": "",
              "time": "",
              "fieldsType": "",
              "fieldsV1": {
                "f:spec": {
                  ".": {},
                  "f:destination": {
                    ".": {},
                    "f:namespace": {},
                    "f:server": {}
                  },
                  "f:project": {},
                  "f:source": {
                    ".": {},
                    "f:helm": {
                      ".": {},
                      "f:valueFiles": {}
                    },
                    "f:path": {},
                    "f:repoURL": {}
                  }
                },
                "f:status": {
                  ".": {},
                  "f:health": {},
                  "f:summary": {},
                  "f:sync": {
                    ".": {},
                    "f:comparedTo": {
                      ".": {},
                      "f:destination": {},
                      "f:source": {
                        ".": {},
                        "f:repoURL": {}
                      }
                    },
                    "f:status": {}
                  }
                }
              }
            }
          ]
        },
        "spec": {
          "source": {
            "repoURL": "",
            "path": "",
            "helm": {
              "valueFiles": []
            }
          },
          "destination": {
            "server": "",
            "namespace": ""
          },
          "project": ""
        },
        "status": {
          "sync": {
            "status": "",
            "comparedTo": {
              "source": {
                "repoURL": ""
              },
              "destination": {}
            }
          },
          "health": {},
          "summary": {}
        }
      }
    },
    {
      "operation": "get_applications",
      "title": "Get Applications",
      "description": "Retrieve a list of applications from Argo CD based on the application name, projects, and other filter criteria that you have specified.",
      "category": "investigation",
      "annotation": "get_applications",
      "enabled": true,
      "parameters": [
        {
          "title": "Application Name",
          "description": "(Optional) Specify the name of the application to filter the results retrieved from Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "text",
          "name": "name",
          "tooltip": "(Optional) Specify the name of the application to filter the results retrieved from Argo CD."
        },
        {
          "title": "Projects",
          "description": "(Optional) Specify the name of the project to filter the results retrieved from Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "text",
          "name": "projects",
          "tooltip": "(Optional) Specify the name of the project to filter the results retrieved from Argo CD."
        },
        {
          "title": "Additional Properties",
          "description": "(Optional) Additional fields, in the JSON format, to filter the results retrieved from Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "additional_properties",
          "tooltip": "(Optional) Additional fields, in the JSON format, to filter the results retrieved from Argo CD."
        }
      ],
      "output_schema": {
        "metadata": {
          "resourceVersion": ""
        },
        "items": [
          {
            "metadata": {
              "name": "",
              "namespace": "",
              "uid": "",
              "resourceVersion": "",
              "generation": "",
              "creationTimestamp": "",
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": ""
              },
              "managedFields": [
                {
                  "manager": "",
                  "operation": "",
                  "apiVersion": "",
                  "time": "",
                  "fieldsType": "",
                  "fieldsV1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      ".": {},
                      "f:destination": {
                        ".": {},
                        "f:namespace": {}
                      },
                      "f:ignoreDifferences": {},
                      "f:project": {},
                      "f:source": {
                        ".": {},
                        "f:helm": {
                          ".": {},
                          "f:releaseName": {},
                          "f:valueFiles": {}
                        },
                        "f:path": {},
                        "f:repoURL": {}
                      },
                      "f:syncPolicy": {
                        ".": {},
                        "f:syncOptions": {}
                      }
                    }
                  }
                }
              ]
            },
            "spec": {
              "source": {
                "repoURL": "",
                "targetRevision": "",
                "helm": {
                  "valueFiles": [],
                  "releaseName": ""
                }
              },
              "destination": {
                "server": "",
                "namespace": ""
              },
              "project": "",
              "syncPolicy": {
                "syncOptions": []
              },
              "ignoreDifferences": [
                {
                  "group": "",
                  "kind": "",
                  "jsonPointers": []
                }
              ]
            },
            "status": {
              "resources": [
                {
                  "version": "",
                  "kind": "",
                  "namespace": "",
                  "name": "",
                  "status": "",
                  "health": {
                    "status": ""
                  }
                }
              ],
              "sync": {
                "status": "",
                "comparedTo": {
                  "source": {
                    "repoURL": "",
                    "path": "",
                    "targetRevision": "",
                    "helm": {
                      "valueFiles": [],
                      "releaseName": ""
                    }
                  },
                  "destination": {
                    "server": "",
                    "namespace": ""
                  },
                  "ignoreDifferences": [
                    {
                      "group": "",
                      "kind": "",
                      "jsonPointers": []
                    }
                  ]
                },
                "revision": ""
              },
              "health": {
                "status": ""
              },
              "reconciledAt": "",
              "operationState": {
                "operation": {
                  "sync": {
                    "revision": "",
                    "syncOptions": []
                  },
                  "initiatedBy": {
                    "automated": ""
                  },
                  "retry": {
                    "limit": ""
                  }
                },
                "phase": "",
                "message": "",
                "syncResult": {
                  "resources": [
                    {
                      "group": "",
                      "version": "",
                      "kind": "",
                      "namespace": "",
                      "name": "",
                      "message": "",
                      "hookType": "",
                      "hookPhase": "",
                      "syncPhase": ""
                    }
                  ],
                  "revision": "",
                  "source": {
                    "repoURL": "",
                    "path": "",
                    "targetRevision": "",
                    "helm": {
                      "valueFiles": [],
                      "releaseName": ""
                    }
                  }
                },
                "startedAt": "",
                "finishedAt": "",
                "retryCount": ""
              },
              "sourceType": "",
              "summary": {},
              "controllerNamespace": ""
            }
          }
        ]
      }
    },
    {
      "operation": "get_application_by_name",
      "title": "Get Application by Name",
      "description": "Retrieves a specific application from Argo CD based on the application name that you have specified.",
      "category": "investigation",
      "annotation": "get_application_by_name",
      "enabled": true,
      "parameters": [
        {
          "title": "Application Name",
          "name": "name",
          "description": "Specify the name of the application to retrieve its details from Argo CD.",
          "type": "text",
          "visible": true,
          "editable": true,
          "required": true,
          "tooltip": "Specify the name of the application to retrieve its details from Argo CD."
        }
      ],
      "output_schema": {
        "metadata": {
          "name": "",
          "namespace": "",
          "uid": "",
          "resourceVersion": "",
          "generation": "",
          "creationTimestamp": "",
          "annotations": {
            "kubectl.kubernetes.io/last-applied-configuration": ""
          },
          "managedFields": [
            {
              "manager": "",
              "operation": "",
              "apiVersion": "",
              "time": "",
              "fieldsType": "",
              "fieldsV1": {
                "f:metadata": {
                  "f:annotations": {
                    ".": {},
                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                  }
                },
                "f:spec": {
                  ".": {},
                  "f:destination": {
                    ".": {},
                    "f:namespace": {}
                  },
                  "f:ignoreDifferences": {},
                  "f:project": {},
                  "f:source": {
                    ".": {},
                    "f:helm": {
                      ".": {},
                      "f:releaseName": {},
                      "f:valueFiles": {}
                    },
                    "f:path": {},
                    "f:repoURL": {}
                  },
                  "f:syncPolicy": {
                    ".": {},
                    "f:syncOptions": {}
                  }
                }
              }
            }
          ]
        },
        "spec": {
          "source": {
            "repoURL": "",
            "targetRevision": "",
            "helm": {
              "valueFiles": [],
              "releaseName": ""
            }
          },
          "destination": {
            "server": "",
            "namespace": ""
          },
          "project": "",
          "syncPolicy": {
            "syncOptions": []
          },
          "ignoreDifferences": [
            {
              "group": "",
              "kind": "",
              "jsonPointers": []
            }
          ]
        },
        "status": {
          "resources": [
            {
              "version": "",
              "kind": "",
              "namespace": "",
              "name": "",
              "status": "",
              "health": {
                "status": ""
              }
            }
          ],
          "sync": {
            "status": "",
            "comparedTo": {
              "source": {
                "repoURL": "",
                "path": "",
                "targetRevision": "",
                "helm": {
                  "valueFiles": [],
                  "releaseName": ""
                }
              },
              "destination": {
                "server": "",
                "namespace": ""
              },
              "ignoreDifferences": [
                {
                  "group": "",
                  "kind": "",
                  "jsonPointers": []
                }
              ]
            },
            "revision": ""
          },
          "health": {
            "status": ""
          },
          "reconciledAt": "",
          "operationState": {
            "operation": {
              "sync": {
                "revision": "",
                "syncOptions": []
              },
              "initiatedBy": {
                "automated": ""
              },
              "retry": {
                "limit": ""
              }
            },
            "phase": "",
            "message": "",
            "syncResult": {
              "resources": [
                {
                  "group": "",
                  "version": "",
                  "kind": "",
                  "namespace": "",
                  "name": "",
                  "message": "",
                  "hookType": "",
                  "hookPhase": "",
                  "syncPhase": ""
                }
              ],
              "revision": "",
              "source": {
                "repoURL": "",
                "path": "",
                "targetRevision": "",
                "helm": {
                  "valueFiles": [],
                  "releaseName": ""
                }
              }
            },
            "startedAt": "",
            "finishedAt": "",
            "retryCount": ""
          },
          "sourceType": "",
          "summary": {},
          "controllerNamespace": ""
        }
      }
    },
    {
      "operation": "update_application",
      "title": "Update Application",
      "description": "Updates an application in Argo CD based on the application name, source, destination, and other input parameters that you have specified.",
      "category": "investigation",
      "annotation": "update_application",
      "enabled": true,
      "parameters": [
        {
          "title": "Application Name",
          "description": "Specify the name of the application to update its details in Argo CD.",
          "required": true,
          "editable": true,
          "visible": true,
          "type": "text",
          "name": "name",
          "tooltip": "Specify the name of the application to update its details in Argo CD."
        },
        {
          "title": "Source",
          "description": "Specify the source, in the JSON format, associated with the application to update in Argo CD.",
          "required": true,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "source",
          "tooltip": "Specify the source, in the JSON format, associated with the application to update in Argo CD.",
          "value": {
            "repoURL": "",
            "path": "",
            "helm": {
              "valueFiles": []
            }
          }
        },
        {
          "title": "Destination",
          "description": "Specify the destination, in the JSON format, associated with the application to update in Argo CD.",
          "required": true,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "destination",
          "tooltip": "Specify the destination, in the JSON format, associated with the application to update in Argo CD.",
          "value": {
            "server": "",
            "namespace": ""
          }
        },
        {
          "title": "Metadata",
          "description": "(Optional) Specify the metadata, in the JSON format, associated with the application to update in Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "metadata",
          "tooltip": "(Optional) Specify the metadata, in the JSON format, associated with the application to update in Argo CD.",
          "value": {
            "labels": {}
          }
        },
        {
          "title": "Specifications",
          "description": "(Optional) Specify the specifications, in the JSON format, associated with the application to update in Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "spec",
          "tooltip": "(Optional) Specify the specifications, in the JSON format, associated with the application to update in Argo CD.",
          "value": {
            "project": ""
          }
        },
        {
          "title": "Operation",
          "description": "(Optional) Specify the operation, in the JSON format, associated with the application to update in Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "operation",
          "tooltip": "(Optional) Specify the operation, in the JSON format, associated with the application to update in Argo CD.",
          "value": {
            "info": {}
          }
        },
        {
          "title": "Additional Properties",
          "description": "(Optional) Additional fields, in the JSON format, associated with the application to update in Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "json",
          "name": "additional_properties",
          "tooltip": "(Optional) Additional fields, in the JSON format, associated with the application to update in Argo CD."
        }
      ],
      "output_schema": {
        "metadata": {
          "name": "",
          "namespace": "",
          "uid": "",
          "resourceVersion": "",
          "generation": "",
          "creationTimestamp": "",
          "managedFields": [
            {
              "manager": "",
              "operation": "",
              "apiVersion": "",
              "time": "",
              "fieldsType": "",
              "fieldsV1": {
                "f:spec": {
                  ".": {},
                  "f:destination": {
                    ".": {},
                    "f:namespace": {},
                    "f:server": {}
                  },
                  "f:project": {},
                  "f:source": {
                    ".": {},
                    "f:helm": {
                      ".": {},
                      "f:valueFiles": {}
                    },
                    "f:path": {},
                    "f:repoURL": {}
                  }
                },
                "f:status": {
                  ".": {},
                  "f:health": {},
                  "f:summary": {},
                  "f:sync": {
                    ".": {},
                    "f:comparedTo": {
                      ".": {},
                      "f:destination": {},
                      "f:source": {
                        ".": {},
                        "f:repoURL": {}
                      }
                    },
                    "f:status": {}
                  }
                }
              }
            }
          ]
        },
        "spec": {
          "source": {
            "repoURL": "",
            "path": "",
            "helm": {
              "valueFiles": []
            }
          },
          "destination": {
            "server": "",
            "namespace": ""
          },
          "project": ""
        },
        "status": {
          "sync": {
            "status": "",
            "comparedTo": {
              "source": {
                "repoURL": ""
              },
              "destination": {}
            }
          },
          "health": {},
          "summary": {}
        }
      }
    },
    {
      "operation": "delete_application",
      "title": "Delete Application",
      "description": "Delete an application in Argo CD based on the application name that you have specified.",
      "category": "investigation",
      "annotation": "delete_application",
      "enabled": true,
      "parameters": [
        {
          "title": "Application Name",
          "name": "name",
          "description": "Specify the name of the application to delete from Argo CD.",
          "type": "text",
          "visible": true,
          "editable": true,
          "required": true,
          "tooltip": "Specify the name of the application to delete from Argo CD."
        }
      ],
      "output_schema": {
        "message": ""
      }
    },
    {
      "operation": "get_clusters",
      "title": "Get Clusters",
      "description": "Retrieve a list of clusters from Argo CD based on the server and cluster name that you have specified.",
      "category": "investigation",
      "annotation": "get_clusters",
      "enabled": true,
      "parameters": [
        {
          "title": "Server",
          "description": "(Optional) Specify the server to filter the results retrieved from Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "text",
          "name": "server",
          "tooltip": "(Optional) Specify the server to filter the results retrieved from Argo CD."
        },
        {
          "title": "Cluster Name",
          "description": "(Optional) Specify the name of the cluster to filter the results retrieved from Argo CD.",
          "required": false,
          "editable": true,
          "visible": true,
          "type": "text",
          "name": "name",
          "tooltip": "(Optional) Specify the name of the cluster to filter the results retrieved from Argo CD."
        }
      ],
      "output_schema": {
        "metadata": {},
        "items": [
          {
            "server": "",
            "name": "",
            "config": {
              "tlsClientConfig": {
                "insecure": "",
                "serverName": "",
                "certData": ""
              }
            },
            "connectionState": {
              "status": "",
              "message": "",
              "attemptedAt": ""
            },
            "serverVersion": "",
            "info": {
              "connectionState": {
                "status": "",
                "message": "",
                "attemptedAt": ""
              },
              "serverVersion": "",
              "cacheInfo": {
                "resourcesCount": "",
                "apisCount": "",
                "lastCacheSyncTime": ""
              },
              "applicationsCount": "",
              "apiVersions": []
            }
          }
        ]
      }
    },
    {
      "operation": "send_custom_request",
      "title": "Execute an API Call",
      "annotation": "send_custom_request",
      "description": "Sends an API request to any API endpoint based on specified HTTP method, endpoint, and other input parameters that you have specified. It helps enabling flexible API interactions tailored to user needs.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "method",
          "title": "HTTP Method",
          "type": "select",
          "editable": true,
          "visible": true,
          "required": true,
          "description": "Select an HTTP action for the request. You can select from the following options:  \n\nDELETE \n\nGET \n\nPATCH \n\nPOST \n\nPUT ",
          "options": [
            "DELETE",
            "GET",
            "PATCH",
            "POST",
            "PUT"
          ],
          "tooltip": "Select an HTTP action for the request. You can select from the following options:  \n\nDELETE \n\nGET \n\nPATCH \n\nPOST \n\nPUT "
        },
        {
          "title": "Endpoint",
          "name": "endpoint",
          "tooltip": "Specify the target API URL path for example: Alerts/search. Do not include /api/v2/",
          "description": "Specify the target API URL path for the request. For example, if the website is \"https://example.com \" and URL path is \"/images/pic.jpg\". The endpoint would be \"/images/pic.jpg\". ",
          "type": "text",
          "visible": true,
          "editable": true,
          "required": true,
          "placeholder": "For e.g /applications"
        },
        {
          "title": "Query Parameters",
          "name": "query_params",
          "description": "(Optional) Specify any optional parameters to add to the URL and refine the request.",
          "type": "json",
          "visible": true,
          "editable": true,
          "required": false,
          "tooltip": "(Optional) Specify any optional parameters to add to the URL and refine the request."
        },
        {
          "name": "payload",
          "title": "Request Payload",
          "type": "json",
          "editable": true,
          "visible": true,
          "required": false,
          "description": "(Optional) Specify data, as JSON, to be sent as the request payload (typically for POST or PUT requests).",
          "tooltip": "(Optional) Specify data, as JSON, to be sent as the request payload (typically for POST or PUT requests)."
        }
      ],
      "output_schema": {}
    }
  ]
}